var state = argument0;

lua_add_function(state, "instance_move", ref_instance_move);
//lua_add_function(state, "instance_create", ref_instance_create);
lua_add_function(state, "instance_exists", ref_instance_exists);
lua_add_function(state, "instance_number", ref_instance_number);
lua_add_function(state, "instance_position", ref_instance_position);
lua_add_function(state, "instance_nearest", ref_instance_nearest);
lua_add_function(state, "instance_furthest", ref_instance_furthest);
lua_add_function(state, "instance_place", ref_instance_place);
lua_add_function(state, "instance_destroy", ref_instance_destroy);
lua_add_function(state, "motion_set", ref_motion_set);
lua_add_function(state, "motion_add", ref_motion_add);
lua_add_function(state, "place_free", ref_place_free);
lua_add_function(state, "place_empty", ref_place_empty);
lua_add_function(state, "place_meeting", ref_place_meeting);
lua_add_function(state, "place_snapped", ref_place_snapped);
lua_add_function(state, "move_random", ref_move_random);
lua_add_function(state, "move_snap", ref_move_snap);
lua_add_function(state, "move_towards_point", ref_move_towards_point);
lua_add_function(state, "move_contact_solid", ref_move_contact_solid);
lua_add_function(state, "move_contact_all", ref_move_contact_all);
lua_add_function(state, "move_outside_solid", ref_move_outside_solid);
lua_add_function(state, "move_outside_all", ref_move_outside_all);
lua_add_function(state, "move_bounce_solid", ref_move_bounce_solid);
lua_add_function(state, "move_bounce_all", ref_move_bounce_all);
lua_add_function(state, "move_wrap", ref_move_wrap);
lua_add_function(state, "distance_to_point", ref_distance_to_point);
lua_add_function(state, "distance_to_object", ref_distance_to_object);
lua_add_function(state, "position_empty", ref_position_empty);
lua_add_function(state, "position_meeting", ref_position_meeting);
lua_add_function(state, "collision_point", ref_collision_point);
lua_add_function(state, "collision_rectangle", ref_collision_rectangle);
lua_add_function(state, "collision_circle", ref_collision_circle);
lua_add_function(state, "collision_ellipse", ref_collision_ellipse);
lua_add_function(state, "collision_line", ref_collision_line);

lua_add_code(state, @"if (__idfields ~= nil) then
    __idfields.instance_move = true;
    __idfields.instance_destroy = true;
    __idfields.motion_set = true;
    __idfields.motion_add = true;
    __idfields.place_free = true;
    __idfields.place_empty = true;
    __idfields.place_meeting = true;
    __idfields.place_snapped = true;
    __idfields.move_random = true;
    __idfields.move_snap = true;
    __idfields.move_towards_point = true;
    __idfields.move_contact_solid = true;
    __idfields.move_contact_all = true;
    __idfields.move_outside_solid = true;
    __idfields.move_outside_all = true;
    __idfields.move_bounce_solid = true;
    __idfields.move_bounce_all = true;
    __idfields.move_wrap = true;
    __idfields.distance_to_point = true;
    __idfields.distance_to_object = true;
    __idfields.position_empty = true;
    __idfields.position_meeting = true;
    __idfields.collision_point = true;
    __idfields.collision_rectangle = true;
    __idfields.collision_circle = true;
    __idfields.collision_ellipse = true;
    __idfields.collision_line = true;
end");

