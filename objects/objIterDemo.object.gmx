<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>data = json_decode('{
    "Conner": {
        "fruit": "apple",
        "age": "17",
        "colour": "red"
    },
    "Paige": {
        "fruit": "orange",
        "age": "23",
        "colour": "green"
    },
    "Cameron": {
        "fruit": "watermellon",
        "age": "48",
        "colour": "purple"
    },
    "Brooks": {
        "fruit": "bannana",
        "age": "9",
        "colour": "yellow"
    }
}');

colourIndex = ds_map_create();
colourIndex[? "yellow"] = c_yellow;
colourIndex[? "red"] = c_red;
colourIndex[? "purple"] = c_purple;
colourIndex[? "green"] = c_green;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i = iter(data, true), j, position = 30, xmargin = 30, xmargin_nest = xmargin + 60,
    pos_nest = 0, titlepad = 20;

while (iter(i)) {
    draw_text(xmargin, position, iterkey(i));
    
    j = iter(iterval(i), true);
    pos_nest = string_height("I");
    while (iter(j)) {
        //check if it the colour property first
        if (iterkey(j) == "colour") {
            draw_set_colour(c_black);
            draw_text(xmargin_nest, position + pos_nest, iterkey(j)+": ");
            
            draw_set_colour(isset_default(colourIndex[? iterval(j)], c_black));
            draw_text(xmargin_nest + string_width(iterkey(j)+": "),
                      position + pos_nest, iterval(j));
        } else {
            //otherwise draw normally
            draw_set_colour(c_black);
            draw_text(xmargin_nest, position + pos_nest, iterkey(j)+": "+iterval(j));
        }
        
        pos_nest += string_height("I");
    }
    position += pos_nest + titlepad;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
