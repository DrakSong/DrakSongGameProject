<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_Sel = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check_pressed(vk_up) {
    _Sel--;
}
if keyboard_check_pressed(vk_down) {
    _Sel++;
}

if _Sel = -1 _Sel = 3
if _Sel = 4 _Sel = 0

if keyboard_check_pressed(ord('X')) {
    keyboard_clear(ord('X'));
    switch (_Sel) {
        //case (0): room_goto(room1); break;
        // case (1): room_goto(room1); break;
        // case (2): ; break;
    case(3):
        GameSettingSave();
        instance_create(x, y, oTitle);
        instance_destroy();
        break;
        // default: STATEMENT;
    }

}

if keyboard_check(vk_right) switch (_Sel) {
case(0):
    _MSel++;
    break;
case (1):
    _VSel++;
    break;
    //case (2): _WSel++;break;
}
if keyboard_check(vk_left) switch (_Sel) {
case(0):
    _MSel--;
    break;
case (1):
    _VSel--;
    break;
    //   case (2): _WSel--;break;
}

if keyboard_check_pressed(vk_left) {
    keyboard_clear(vk_left);
    if _Sel = 2 _WSel -= 0.5;
}
if keyboard_check_pressed(vk_right) {
    keyboard_clear(vk_right) if _Sel = 2 _WSel += 0.5;
}
_MSel = max(0, _MSel);
_MSel = min(100, _MSel);
_VSel = max(0, _VSel);
_VSel = min(100, _VSel);
_WSel = max(1, _WSel);
_WSel = min(3, _WSel);

global.zoom = _WSel;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_colour(c_black);
draw_rectangle(-1,-1,256,144,0);


draw_set_colour(c_white);
var _Muen;
_Muen[0] = 'BGM'
_Muen[1] = '音效'
_Muen[2] = '窗口'
_Muen[3] = '退出'

var _Muen2;
_Muen2[0] = _MSel
_Muen2[1] = _VSel
_Muen2[2] = _WSel
_Muen2[3] = ''

for (i=0; i&lt;4; i+=1)
{
   DrawSelect(0,80 + 12*i,_Muen[i],_Sel=i);
   DrawSelect(32,80 + 12*i,_Muen2[i],_Sel=i);
};

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
