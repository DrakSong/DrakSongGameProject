<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sPlayerJumpD</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>oPlayer_new</parentName>
  <maskName>sPlayerMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///参数修改
///spritie对应表

sIdle = sPlayerIdle; //战立
sRun = sPlayerRun;//跑动
sRoll = sPlayerRoll; //滚动
sJumpU = sPlayerJumpU;//上升
sJumpM = sPlayerJumpM;//维持
sJumpD = sPlayerJumpD;//下落
sAtk = sPlayerJab; //攻击;
sBatk = sPlayerJumpM;//被攻击
///角色属性（一般修改地区）
var k = 1-0.618
groundAccel = 1.00*k;
groundFric  = 2.00*k;
airAccel    = 0.75*k;
airFric     = 2.00*k;//0.01; 空中摩檫力得要大点不如直接被飞的很远
vxMax       = 2.2;
vyMax       = 13*k;
jumpHeight  = 10*k;
gravNorm    = 0.25;//重力速度
gravSlide   = 0.25; //贴墙重力速度
clingTime   = 2.0;
RollSpeed = 0.5;//滚动速度
RollLong = 3.5;//滚动距离
TowJumpON = true;//二段跳锁

//修正
BAtkFlyY = 0//击飞修正
BAtkFlyX = 0//击飞修正
Toughness = 0;//硬直修正 


//受伤害回复的时长
//StiffTime = 0; //硬直时间
//InvalidTime = 0;//无敌时间

//是否绘制debug信息
//Debug = true;


MaxHP = 32;
MaxMP = 32;
MaxAP = 32;
HP =  32;
MP =  32;
AP =  32;

ATK = 0;//攻击力
DEF = 0//防御力


/***********防御**********/
DEF = 0;//防御力
DefStiff = 30//僵直补正
DefFlyH = 0//击飞补正
DefFlyV = 0//
DefTime = 90//自身受伤后 无敌时间
/***************攻击****************************/
ATK = 0;//攻击力
AtkStiff = 0//攻击照成硬直
AtkFlyH = 0;//击飞玩家
AtkFlyV = 0;//击飞玩家

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player的信息
//////////////////红HP////////////////////////
var Xs = 16+8;//开始
var Xe = 16+MaxHP;//结束
var Y = 8//y
var W = min(100,HP/MaxHP);
var W = max(0,W);
var W = W*(Xe-Xs);//长度
var St = 0;
var Sm = 1;
//绘制开头
draw_sprite_ext(sprUi,St,Xs,Y,1,1,0,c_white,1);
//绘制结尾
draw_sprite_ext(sprUi,St,Xe+1,Y,1,1,0,c_white,1);

//绘制的底层
for (i=0; i&lt;Xe-Xs; i+=1)
{
    draw_sprite_ext(sprUi,Sm,Xs+1+i,Y,1,1,0,c_white,0.43);
};
//绘制现有
for (i=0; i&lt;W; i+=1)
{
    draw_sprite_ext(sprUi,Sm,Xs+1+i,Y,1,1,0,c_white,1);
};




//篮
//////////////////MP////////////////////////
var Xs = 16+8;//开始
var Xe = 16+MaxMP;//结束
var Y = 8+5//y
var W = min(100,MP/MaxMP);
var W = max(0,W);
var W = W*(Xe-Xs);//长度
var St = 2;
var Sm = 3;
//绘制开头
draw_sprite_ext(sprUi,St,Xs,Y,1,1,0,c_white,1);
//绘制结尾
draw_sprite_ext(sprUi,St,Xe+1,Y,1,1,0,c_white,1);

//绘制的底层
for (i=0; i&lt;Xe-Xs; i+=1)
{
    draw_sprite_ext(sprUi,Sm,Xs+1+i,Y,1,1,0,c_white,0.43);
};
//绘制现有
for (i=0; i&lt;W; i+=1)
{
    draw_sprite_ext(sprUi,Sm,Xs+1+i,Y,1,1,0,c_white,1);
};


//绿
//
////////////////////Ap/////////////////////
var Xs = 16+8;//开始
var Xe = 16+MaxAP;//结束
var Y = 8+5+5//y
var W = min(100,AP/MaxAP);
var W = max(0,W);
var W = W*(Xe-Xs);//长度
var St = 4;
var Sm = 5;
//绘制开头
draw_sprite_ext(sprUi,St,Xs,Y,1,1,0,c_white,1);
//绘制结尾
draw_sprite_ext(sprUi,St,Xe+1,Y,1,1,0,c_white,1);

//绘制的底层
for (i=0; i&lt;Xe-Xs; i+=1)
{
    draw_sprite_ext(sprUi,Sm,Xs+1+i,Y,1,1,0,c_white,0.43);
};
//绘制现有
for (i=0; i&lt;W; i+=1)
{
    draw_sprite_ext(sprUi,Sm,Xs+1+i,Y,1,1,0,c_white,1);
};

draw_sprite_ext(sprUi,9,16-8,8-1,1,1,0,c_white,1);

//左空位


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,0</point>
    <point>32,32</point>
    <point>0,32</point>
  </PhysicsShapePoints>
</object>
