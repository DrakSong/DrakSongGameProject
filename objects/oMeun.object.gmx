<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>_Sel = false;
_Mode = 'Title'
BGMPlay(mus_titlescreen,true)
surf = -1;

   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Title
if _Mode = 'Title' {
    if KeyGet('上', 2) {
        _Sel--
    };
    if KeyGet('下', 2) {
        _Sel++
    };
    _Sel = MinMax(_Sel, 0, 3);
    //触发选中
    if KeyGet('A', 2) {
        var _S = _Sel;
        _Sel = false;
        switch (_S) {
        case 0:
            show_debug_message('LoadGame');
            _Mode = 'LoadGame';
            break;
        case 1:
            show_debug_message('NewGame');
            _Mode = 'NewGame';
            break;
        case 2:
            show_debug_message('Option');
            _Mode = 'Option';
            break;
        case 3:
            game_end();
            break;

        }
    }

}


/*
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OPrion
if _Mode = 'Option' {
    if KeyGet('上', 2) {
        _Sel--
    };
    if KeyGet('下', 2) {
        _Sel++
    };
    _Sel = MinMax(_Sel, 0, 3);
    //触发选中
    //if KeyGet('A', 2) 
    {
        var _S = _Sel;
      
          var Vol = global.GameInfo[?'设置'];
  // Vol =/100;
        switch (_S) {
        case 0:
           {
           if KeyGet('左',0)  {Vol[?'BGM音量']--};
           if KeyGet('右',0)  {Vol[?'BGM音量']++};
           Vol[?'BGM音量'] = MinMax(Vol[?'BGM音量'],0,100);
           if KeyGet('左',0)or KeyGet('右',0){
           audio_sound_gain(BGMIndex(),Vol[?'BGM音量']/100,0)
           }
           }
            break;
        case 1:
            if KeyGet('左',0)  Vol[?'音效音量']--;
            if KeyGet('右',0)  Vol[?'音效音量']++;
            Vol[?'音效音量'] = MinMax(Vol[?'音效音量'],0,100);
            break;
        case 2:
            if KeyGet('左',2)  Vol[?'窗口倍数']-=0.5;
            if KeyGet('右',2)  Vol[?'窗口倍数']+=0.5;
            Vol[?'窗口倍数'] = MinMax(Vol[?'窗口倍数'],1,5);
            if KeyGet('左',2)or KeyGet('右',2){WinSet(Vol[?'窗口倍数'])}
            break;
        case 3:
        if KeyGet('A',2){
           show_debug_message('Title');  _Sel = false;_Mode = 'Title';}
            break;

        }
    }

}


/*
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///NewGame;
if _Mode = 'NewGame'
{
BGMFree();
instance_create(32,128,oPlayerGirl);
//instance_create(x,y,oCamera);
room_goto_next();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LoadGame
if _Mode = 'LoadGame'
{


    if KeyGet('上', 2) {
        _Sel--
    };
    if KeyGet('下', 2) {
        _Sel++
    };
    _Sel = MinMax(_Sel, 0, 3);
    //触发选中
    if KeyGet('A', 2) {
        var _S = _Sel;
      
        switch (_S) {
        case 0:
       
            break;
        case 1:
        
            break;
        case 2:
           
            break;
        case 3:
           ShowMessage('Title');  _Sel = false; ;_Mode= 'Title';
            break;

        }
    }

}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>surface_set_target(surf);
//draw_background(BG, 0,0);
//surface_set_target(surf);

surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>BGMFree();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

texture_set_interpolation(true)
display_set_gui_size(1024,576);
var Xs = 1//256/1024;
var Ys = 1//Xs;
if surface_exists(surf)
{
//view_surface_id[0] = surf
surface_set_target(surf);

//draw_set_blend_mode(bm_subtract);
var _Y, van, fuck;
van = (0.12450 / 4) * (sin(current_time / 450));
_Y = (576 * (1 - 0.618));
fuck = (current_time / 450) * 6;
draw_clear_alpha(c_black, 0);
//draw_set_blend_mode(bm_normal);
//圆环
;

//draw_set_blend_mode(bm_subtract);
draw_set_colour(c_white)
draw_set_alpha(1-0.618)
//draw_lensflare(1024/2,_Y,0,Xs,Ys,1,choose(3,4,5),choose(1,1.2,1.5))
//

draw_set_blend_mode(bm_add);
draw_set_alpha(1)
draw_sprite_ext(sprO, 0, 1024 / 2, _Y, 1.5 + van, 1.5 + van, -fuck, c_white, 10);
draw_sprite_ext(sprO, 0, 1024 / 2, _Y, 1.5 + van, 1.5 + van, -fuck, c_white, 10);
draw_sprite_ext(sprO, 0, 1024 / 2, _Y, 1.3 + van, 1.3 + van, fuck * 2, c_white, 10)
draw_sprite_ext(sprO, 0, 1024 / 2, _Y, 1.3 + van, 1.3 + van, fuck * 2, c_white, 10)
draw_set_blend_mode(bm_normal);

draw_set_alpha(1-0.618)


//draw_set_blend_mode(bm_normal);






surface_reset_target();

draw_surface_ext(surf, 0, 0, Xs,Ys, 0, c_white, 1);

}
else
{
surf = surface_create(1024 , 576);
}
_Y = (576 * (1 - 0.618));
draw_lensflare(1024/2,_Y,0,Xs,Ys,1,choose(3,4,5),choose(1,1.2,1.5))
//draw_lensflare(256/2,144*(1-0.618),0,Xs,Ys,1,choose(3,4,5),choose(1,1.2,1.5))
texture_set_interpolation(false)
GuiSet(1);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Title
GuiSet(1)
draw_set_font(fWindow)
draw_set_colour(c_white)
if _Mode = 'Title'
{ var _Muen;
_Muen[0] = '读取'
_Muen[1] = '新游戏'
_Muen[2] = '设置'
_Muen[3] = '退出'
draw_set_halign(fa_left)
for (i=0; i&lt;4; i+=1)
{
   DrawSelect(0,80 + 12*i,_Muen[i],_Sel=i);
};

}
 

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///LoadGame

if _Mode = 'LoadGame'
{
{ var _Muen;
  var Set = global.GameInfo[?'记录'];
  var Set  = Set[?'存档使用'];
  for (i=0; i&lt;3; i+=1)
  {   var L;L[i] = string(i+1);
    if Set[?L[i]]{
      _Muen[i] = '存档'+string(i)+string(Set[?L[i]])}
      else
      {_Muen[i]='无存档'}
      
  };
  
  
  
  

_Muen[3] = '返回'
draw_set_halign(fa_left)
for (i=0; i&lt;4; i+=1)
{
   DrawSelect(0,80 + 12*i,_Muen[i],_Sel=i);
};

}
 


}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Option
GuiSet(1)
draw_set_font(fWindow)
draw_set_colour(c_white)
if _Mode = 'Option'
{ var _Muen;
  var Set = global.GameInfo[?'设置'];
_Muen[0] = 'BGM音量'+ string(Set[?'BGM音量']);
_Muen[1] = '音效音量'+ string(Set[?'音效音量']);
_Muen[2] = '窗口倍数'+ string(Set[?'窗口倍数']);
_Muen[3] = '返回'
draw_set_halign(fa_left)
for (i=0; i&lt;4; i+=1)
{
   DrawSelect(0,80 + 12*i,_Muen[i],_Sel=i);
};

}
 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*ViewSet(0,true,1,false);

texture_set_interpolation(true)

var Xs = 256/1024;
var Ys = Xs;
if surface_exists(surf)
{
//view_surface_id[0] = surf
surface_set_target(surf);

draw_set_blend_mode(bm_subtract);
var _Y, van, fuck;
van = (0.12450 / 4) * (sin(current_time / 450));
_Y = (576 * (1 - 0.618));
fuck = (current_time / 450) * 6;
draw_clear_alpha(c_black, 0.618);

//圆环
;

draw_set_blend_mode(bm_subtract);
draw_set_colour(c_white)
draw_set_alpha(1-0.618)
draw_lensflare(1024/2,_Y,0,Xs,Ys,1,choose(3,4,5),choose(1,1.2,1.5))
draw_set_blend_mode(bm_normal);

draw_set_blend_mode(bm_add);
draw_set_alpha(1)
draw_sprite_ext(sprO, 0, 1024 / 2, _Y, 1.5 + van, 1.5 + van, -fuck, c_white, 10);
draw_sprite_ext(sprO, 0, 1024 / 2, _Y, 1.5 + van, 1.5 + van, -fuck, c_white, 10);
draw_sprite_ext(sprO, 0, 1024 / 2, _Y, 1.3 + van, 1.3 + van, fuck * 2, c_white, 10)
draw_sprite_ext(sprO, 0, 1024 / 2, _Y, 1.3 + van, 1.3 + van, fuck * 2, c_white, 10)
draw_set_blend_mode(bm_normal);

draw_set_alpha(1-0.618)
draw_lensflare(1024/2,_Y,0,Xs,Ys,1,choose(3,4,5),choose(1,1.2,1.5))

draw_set_blend_mode(bm_normal);
surface_reset_target();


draw_surface_ext(surf, 0, 0, Xs,Ys, 0, c_white, 1);
}
else
{
surf = surface_create(1024 , 576);
}
//draw_lensflare(256/2,144*(1-0.618),0,Xs,Ys,1,choose(3,4,5),choose(1,1.2,1.5))
texture_set_interpolation(false)


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
