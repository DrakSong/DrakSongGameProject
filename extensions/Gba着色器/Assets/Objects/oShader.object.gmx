<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///     Boring old create event.

palette = 1; // Default Palette.

repeat(600)
{
    instance_create(random(room_width),random(room_height),oGBoy);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///     Just some boring old palette selection code.
if keyboard_check(ord("1")) palette=1;
if keyboard_check(ord("2")) palette=2;
if keyboard_check(ord("3")) palette=3;
if keyboard_check(ord("4") )palette=4;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///     Exciting Shader Stuff!

if !keyboard_check(vk_enter) shader_set(shGameBoy);  // Activate Shader.


//  Apply Palette Parameters.  //
if (palette==1)                  // Palette 1 - Original. //
{
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color1"), 11, 25, 32);      //  Setting color 1
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color2"), 47, 105, 87);     //  Setting color 2
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color3"), 134, 194, 112);   //  Setting color 3
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color4"), 245, 250, 239);   //  Setting color 4
}

if (palette==2)                 // Palette 2 - Black and White. //
{
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color1"), 7, 7, 7);         //  Setting color 1
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color2"), 106, 106, 106);   //  Setting color 2
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color3"), 192, 192, 192);   //  Setting color 3
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color4"), 252, 252, 252);   //  Setting color 4
}

if (palette==3)                 // Palette 3 - Rose. //
{
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color1"), 87, 111, 93);     //  Setting color 1
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color2"), 229, 115, 158);   //  Setting color 2
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color3"), 253, 159, 167);   //  Setting color 3
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color4"), 252, 252, 252);   //  Setting color 4
}

if (palette==4)                 // Palette 4 - Roguelight by Daniel Linssen. //
{
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color1"), 53, 43, 49);      //  Setting color 1
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color2"), 75, 109, 133);    //  Setting color 2
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color3"), 150, 207, 133);   //  Setting color 3
    shader_set_uniform_f(shader_get_uniform(shGameBoy,"u_color4"), 247, 247, 214);   //  Setting color 4
}


//  Draw whatever.  //
draw_surface_stretched(application_surface,0,0,window_get_width(),window_get_height());  //redrawing the application surface to the GUI redraws the screen with the shader enabled.

shader_reset();  //  Disable Shader.

draw_rectangle_color(0,0,270,48,c_black,c_black,c_black,c_black,0);
draw_set_color(c_white);
draw_text(8,8,"1 - 4     -       Select Palette");
draw_text(8,24,"Enter    -       Hide Shader");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
