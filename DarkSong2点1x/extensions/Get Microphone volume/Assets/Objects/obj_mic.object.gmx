<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HOW TO USE

/*

    1. Disable or enable drawing in the script below
    2. Add this object to a room and make it persistent if desired.
    3. Get microphone_volume from this object. It contains the volume.

*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Begin audio recording - DISABLE DRAWING HERE!!

//Disable or enable drawing of the graph
drawing = true;

microphone_volume = 0;
us_old = -1;
//Begin audio recording and create buffer and graph
if (audio_get_recorder_count() == 0) {
    //There is no microphone or recording is not supported.
    exit;
}
audio_record = audio_start_recording(0);
if (drawing)
    graph = ds_list_create();
audio_buffer = buffer_create(4800*2, buffer_fixed, 2);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get audio volume

//Get length of audio and copy part of buffer
len = async_load[? "data_len"];
buffer_seek(audio_buffer,buffer_seek_start,0);
buffer_copy(async_load[? "buffer_id"], 0, len, audio_buffer, 0);

//Alpha used for lowpass
var alpha = 0.003;
/** Looping through PCM output **/
for (var i = 0;i &lt; len/16; i++) {
    var us = buffer_read(audio_buffer, buffer_s16);
    us = abs(us);
    
    /** Lowpass **/
    if (us_old == -1) us_old = us;
    us = alpha * us + (1.0 - alpha) * us_old;
    us_old = us;
    /**/
    
    microphone_volume = us;
    if (drawing)
        ds_list_insert(graph,0,microphone_volume);
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW - Disable drawing in create event!
if (drawing) {
    for (var i = 0; i &lt; ds_list_size(graph);i++) {
    
        if (i/20 &lt;= window_get_width()) {
            draw_point(i/20,600-(ds_list_find_value(graph,i)/32));
        } else {
            ds_list_delete(graph,i);
        }
    
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
